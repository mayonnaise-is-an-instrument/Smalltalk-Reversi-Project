Object subclass: #Board	instanceVariableNames: 'rows'	classVariableNames: ''	poolDictionaries: ''	category: 'Reversi'!!Board methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 15:44'!isBlack		| userInput x y |		x := (userInput at: 1) codePoint - 96. 	y := (userInput at: 2) codePoint - 48.		(x = 'b') | (x = 'w') | (y = 'b') | (y = 'w')		ifTrue: [Transcript show: '^ true'].! !!Board methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 15:26'!isWhite! !!Board methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 15:25'!isValidMove	| userInput x y |		userInput := UIManager default 			request: 'Enter the space you would like to move.' 			initialAnswer: 'a1'.		userInput ifNil: [ ^nil ].				x := (userInput at: 1) codePoint - 96. 		y := (userInput at: 2) codePoint - 48.		(x - 1 = 0) | (userInput not= y) 		ifTrue: [ Transcript show: '^ userInput' ].	UIManager default alert: 'Invalid Move'.! !!Board methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 11/18/2019 17:17'!initialize	rows := Array new: 8.	1 to: 8 do: [ :i |		rows at: i put: ((Array new: 8) atAllPut: $.; yourself).		].	(rows at: 4) 		at: 4 put: $w;		at: 5 put: $b.	(rows at: 5) 		at: 4 put: $b;		at: 5 put: $w.! !!Board methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 11/18/2019 17:32'!print	Transcript show: '  A B C D E F G H'; cr.	1 to: 8 do: [ :row |		Transcript show: row; space.		1 to: 8 do: [ :column |			Transcript show: ((rows at: row) at: column); space.		].		Transcript show: row; cr.	].	Transcript show: '  A B C D E F G H'; cr.! !Object subclass: #Game	instanceVariableNames: 'board player1 player2 userInput'	classVariableNames: ''	poolDictionaries: ''	category: 'Reversi'!!Game methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 16:00'!isBlack		| x y |			userInput := UIManager default 			request: 'Enter the space you would like to move.' 			initialAnswer: 'a1'.		userInput ifNil: [ ^nil ].			x := (userInput at: 1) codePoint - 96. 	y := (userInput at: 2) codePoint - 48.		(x = 'b') | (x = 'w') | (y = 'b') | (y = 'w')		ifTrue: [Transcript show: '^ true'].! !!Game methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 15:59'!getMove		| x y |		[true] whileTrue:[ 		userInput := UIManager default 			request: 'Enter the space you would like to move.' 			initialAnswer: 'a1'.		userInput ifNil: [ ^nil ].			x := (userInput at: 1) codePoint - 96. 		y := (userInput at: 2) codePoint - 48.			(x > 0) & (x <= 8) & (y > 0) & (y <= 8)			ifTrue: [ ^ Point x: x y: y ].		UIManager default alert: 'Invalid Move'.	].! !!Game methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 11/18/2019 16:58'!executeMove! !!Game methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 16:05'!run	[ self isDone ] whileFalse: [ 		player1 takeTurn.		player2 takeTurn.	 ].	self halt.! !!Game methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 13:49'!initialize	board := Board new.	player1 := Player new.	player1 setColor: #white.	player1 getName.		player2 := Player new.	player2 setColor: #black.	player2 getName.	! !Object subclass: #Player	instanceVariableNames: 'playerName color'	classVariableNames: ''	poolDictionaries: ''	category: 'Reversi'!!Player methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 13:45'!setColor: aColor	color := aColor.! !!Player methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 13:47'!getName		playerName := UIManager default 		request: 'Enter your name.' 		initialAnswer: 'Steve'.! !!Player methodsFor: 'as yet unclassified' stamp: 'TheodoreMoen 12/6/2019 13:41'!getColor	"Gets user's color"	| userInput |		[true] whileTrue:[ 		userInput := UIManager default 			request: 'Enter the color you would like to be (b or w).' 			initialAnswer: 'b'.		userInput ifNil: [ ^nil ].				 					(userInput = 'b') | (userInput = 'w')			ifTrue: [ ^ userInput ].		UIManager default alert: 'Invalid Entry'.	].! !